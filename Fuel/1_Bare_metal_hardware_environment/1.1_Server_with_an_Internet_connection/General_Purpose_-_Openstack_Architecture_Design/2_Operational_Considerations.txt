Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-04-11T15:41:43+02:00

====== 2 Operational Considerations ======
Created Monday 11 April 2016

===== Operational considerations =====
	SLA terms that affect design include:
	* API availability guarantees implying multiple infrastructure services and highly available load balancers.
	* Network uptime guarantees affecting switch design, which might require redundant switching and power.
	* Factor in networking security policy requirements in to your deployments.

==== Support and maintainability ====

		 OpenStack cloud management requires operations staff to understand and comprehend design architecture content.
		 The operations and engineering staff skill level, and level of separation, are dependent on size and purpose of the installation. 


==== Monitoring ====

		Specific meters that are critically important to monitor include:
		* Image disk utilization
		* Response time to the Compute API

==== Downtime ====

		To effectively run cloud installations, initial downtime planning includes creating processes and architectures that support the following:
		* Planned (maintenance)
		* Unplanned (system faults)

==== Capacity planning ====

		Capacity constraints for a general purpose cloud environment include:
		* Compute limits
		* Storage limits

		__Increasing the size of the supporting compute environment increases the network traffic and messages, adding load to the controller or networking nodes. Effective monitoring of the environment will help with capacity decisions on scaling.__


=== Horizontally scaling process ===
		 when adding extra compute capacity to an OpenStack cloud
		
		**When adding additional compute nodes to environments, ensure identical or functional compatible CPUs are used, otherwise live migration features will break.**
		
		It is necessary to add rack capacity or network switches as scaling out compute hosts directly affects network and datacenter resources.
		
		increasing the number of instances that can run within the compute environment by adjusting the overcommit ratio is another option.(__detrimental effect and cause a potential increase in a noisy neighbor. The additional risk of increasing the overcommit ratio is more instances failing when a compute host fails.__)
		
=== Vertical scaling process ===
		Compute host components can also be upgraded to account for increases in demand; 
		Upgrading CPUs with more cores, or increasing the overall server memory, can add extra needed capacity depending on whether the running applications are more CPU intensive or memory intensive.
